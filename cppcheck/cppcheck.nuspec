<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>cppcheck</id>
    <title>Cppcheck</title>
    <version>1.67</version>
    <authors>The CPPCheck Team</authors>
    <owners>Thieum22</owners>
    <summary>A tool for static C/C++ code analysis</summary>
    <description>Cppcheck is a static analysis tool for C/C++ code. Unlike C/C++ compilers and many other analysis tools it does not detect syntax errors in the code. Cppcheck primarily detects the types of bugs that the compilers normally do not detect. The goal is to detect only real errors in the code (i.e. have zero false positives). </description>
    <projectUrl>http://cppcheck.sourceforge.net/</projectUrl>
    <tags>cpp c++ check static code analysis</tags>
    <copyright></copyright>
    <licenseUrl>http://www.gnu.org/copyleft/gpl.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <releaseNotes>General changes:
 - Library files have now a 'format' attribute. Format version 1 is assumed by default
 - Cppcheck does no longer abort checking if unhandled characters (Non-ASCII) are found

New checks:
 - Check for unused return values
 - Detect shift by too many bits, signed integer overflow and dangerous sign conversion
 - Recommend usage of expm1(), log1p(), erfc()
 - Division by sizeof() as parameter to memset/memcpy/memmove/etc. as they expect a size in bytes
 - Several new va_arg related checks:
 -- Wrong parameter passed to va_start()
 -- Reference passed to va_start()
 -- Missing va_end()
 -- Using va_list before it is opened
 -- Subsequent calls to va_start/va_copy()
 - Initialization by itself in initializer list
 - Dead pointer usage when pointer alias local variable that has gone out of scope

Improvements:
 - Support uniform initialization syntax (C++11)
 - Much improvements to value flow analysis
 - Improved AST creation (support placement new, C++-style casts, templates, operator new[], ...)
 - Improved lambda support
 - Support GCC extension attriute((used)) and MSVC extension __declspec(property)
 - Better support for static member variables, inherited variables and namespaces
 - Improved typedef support where multiple variables are declared at once
 - Avoid checking code multiple times by calculating a checksum. Duplicate preprocessor configurations are eliminated by this.
 - Support C++03/C 'auto' keyword
 - HTML report: display 'verbose' message using clickable expandable divs

Additionally, lots of false positives and bugs have been fixed and several existing checks have been improved.
</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
